{
    "className" : "ChampionStatus",
    "cppHeader" : "RiotAPI/Response/ChampionStatus.h",
    "objcHeader" : "RiotAPI/Response/ChampionStatusObjc.h",
    "objcPrefix" : "",
    "objcSuffix" : "Objc",
    "wrapIn" : ["NS_RIOT_BEGIN", "NS_RIOT_END"],
    "includes" : [
    ],
    "baseClasses" : {
        "public" : ["APIResponse"]
    },
    "cppConstructors" : {
        "all_in" : {
            "auto_gen_unspecified" : true
        },
        "json_std_string" : {
            "auto_gen_unspecified" : false,
            "arg_list" : [
                ["const std::string & json"]
            ],
            "init_list" : [
                ["json", "json"]
            ]
        },
        "json_cstring" : {
            "auto_gen_unspecified" : false,
            "arg_list" : [
                ["const char * json"]
            ],
            "init_list" : [
                ["json", "json"]
            ]
        }
    },
    "objcInit" : {
        "initWithDictionary" : {
            "type" : "from_json"
        }
    },
    "instanceMethods" : {
    },
    "instanceVariables" : {
    },
    "staticMethods" : {
    },
    "synthesizeProperties" : [
        {
            "name" : "active",
            "cpp_type" : "bool",
            "options" : ["readonly", "nonatomic", "assign"]
        },
        {
            "name" : "botEnabled",
            "cpp_type" : "bool",
            "options" : ["readonly", "nonatomic", "assign"]
        },
        {
            "name" : "botMmEnabled",
            "cpp_type" : "bool",
            "options" : ["readonly", "nonatomic", "assign"]
        },
        {
            "name" : "freeToPlay",
            "cpp_type" : "bool",
            "options" : ["readonly", "nonatomic", "assign"]
        },
        {
            "name" : "id",
            "cpp_type" : "long",
            "options" : ["readonly", "nonatomic", "assign"]
        },
        {
            "name" : "rankedPlayEnabled",
            "cpp_type" : "bool",
            "options" : ["readonly", "nonatomic", "assign"]
        }
    ]
}